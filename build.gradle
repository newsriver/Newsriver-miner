apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '0.1.2'


mainClassName = 'ch.newsriver.miner.MinerMain'

repositories {
    mavenCentral()
}

processResources {

    filesMatching('**/version.properties') { expand projectVersion: project.version }

}

dependencies {
    compile project(':Newsriver-lib')
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.2'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.2'
    compile 'org.apache.kafka:kafka-clients:0.9.0.1'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'com.optimaize.languagedetector:language-detector:0.5'
    compile 'rome:rome-fetcher:1.0'
    compile 'com.nanohttpd:nanohttpd:2.2.0'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-cli:commons-cli:1.3.1'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Newsriver Miner',
                'Implementation-Version': version,
                'Main-Class': 'ch.newsriver.miner.MinerMain'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}


docker {
    registry = 'https://docker-registry.newsriver.io:5000'
}

task buildimage(type: Docker, dependsOn: [clean, fatJar]) {
    push = true
    tagVersion = 'latest'
    registry = 'docker-registry.newsriver.io:5000'
    applicationName = 'newsriver-miner'
    dockerfile = project.file('Dockerfile')

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

